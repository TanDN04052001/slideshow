{"version":3,"sources":["reportWebVitals.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Slideshow","props","auto","timer","setInterval","setState","slide","state","next","prev","stop","clearInterval","className","src","this","alt","onClick","type","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCARQ,E,kDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAIRC,KAAK,WACH,EAAKC,MAAMC,aAAY,WACrB,EAAKC,SAAS,CAACC,MAAwB,GAAlB,EAAKC,MAAMD,MAAS,EAAE,EAAKC,MAAMD,MAAO,MAC7D,MARc,EAUlBE,KAAK,WACH,EAAKH,SAAS,CAACC,MAAwB,GAAlB,EAAKC,MAAMD,MAAS,EAAE,EAAKC,MAAMD,MAAO,KAX7C,EAalBG,KAAK,WACH,EAAKJ,SAAS,CAACC,MAAwB,GAAlB,EAAKC,MAAMD,MAAS,EAAE,EAAKC,MAAMD,MAAO,KAd7C,EAgBlBI,KAAK,WACHC,cAAc,EAAKR,QAfnB,EAAKI,MAAM,CAACD,MAAM,GAFF,E,qDAoBhB,OACE,sBAAKM,UAAU,QAAf,UACE,qBAAKA,UAAU,SAASC,IAAK,eAAeC,KAAKP,MAAMD,MAAM,OAAQS,IAAI,UACzE,wBAAQH,UAAU,UAAUI,QAASF,KAAKL,KAA1C,SAAgD,mBAAGG,UAAU,6BAC7D,wBAASA,UAAU,SAAUI,QAASF,KAAKN,KAA3C,SAAiD,mBAAGI,UAAU,8BAC9D,gCACA,wBAAQK,KAAK,SAASL,UAAU,UAAUI,QAASF,KAAKZ,KAAxD,kBACA,wBAAQe,KAAK,SAAUL,UAAU,UAAUI,QAASF,KAAKJ,KAAzD,4B,GA5BgBQ,IAAMC,WAoC9BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BjC,M","file":"static/js/main.1ea19582.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nclass Slideshow extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={slide:1};\n  }\n \n  auto=()=>{\n    this.timer=setInterval(()=>{\n      this.setState({slide:this.state.slide==6?1:this.state.slide +1}) \n    },3000)\n  }\n  next=()=>{\n    this.setState({slide:this.state.slide==6?1:this.state.slide +1})\n  }\n  prev=()=>{\n    this.setState({slide:this.state.slide==1?6:this.state.slide -1})\n  }\n  stop=()=>{\n    clearInterval(this.timer);\n  }\n  render(){\n    return(\n      <div className='Slide'>\n        <img className='Images' src={'images/slide'+this.state.slide+'.png'} alt=\"anh 1\"/>\n        <button className='button1' onClick={this.prev}><i className=\"fas fa-hand-point-left\"></i></button>\n        <button  className='button'  onClick={this.next}><i className=\"fas fa-hand-point-right\"></i></button>\n        <div>\n        <button type='button' className='button2' onClick={this.auto}>Auto</button>\n        <button type='button'  className='button3' onClick={this.stop}>Stop</button>\n        </div>\n       </div>\n    )\n  }\n    \n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Slideshow></Slideshow>\n  </React.StrictMode> ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}